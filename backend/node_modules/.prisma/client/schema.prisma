// Prisma schema for Inventory Management App

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int               @id @default(autoincrement())
  name        String
  email       String            @unique
  password    String
  role        String            @default("user")
  inventories Inventory[] // inventories created by this user
  items       Item[] // items created by this user
  likes       ItemLike[] // likes by this user
  access      InventoryAccess[] // inventories user has access to
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Inventory {
  id           Int               @id @default(autoincrement())
  title        String
  description  String?
  category     String
  isPublic     Boolean           @default(false)
  ownerId      Int
  owner        User              @relation(fields: [ownerId], references: [id])
  items        Item[]
  access       InventoryAccess[] // users with access
  customFields Json
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model Item {
  id          Int        @id @default(autoincrement())
  inventoryId Int
  inventory   Inventory  @relation(fields: [inventoryId], references: [id])
  createdById Int
  createdBy   User       @relation(fields: [createdById], references: [id])
  customId    String
  fields      Json
  likes       ItemLike[] // relation from ItemLike
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([inventoryId, customId])
}

model ItemLike {
  id        Int      @id @default(autoincrement())
  itemId    Int
  userId    Int
  item      Item     @relation(fields: [itemId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([itemId, userId])
}

model InventoryAccess {
  id          Int       @id @default(autoincrement())
  inventoryId Int
  userId      Int
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
  canEdit     Boolean   @default(false)

  @@unique([inventoryId, userId])
}
